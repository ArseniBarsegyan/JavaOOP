package task10;

/*
 Авиакомпания.

 - Создай в пакете папку "classes", в ней папку "abstract", здесь будут храниться абстрактные классы.
 В этой папке:
    - Создай иерархию самолетов (создай абстрактные классы Plane, PassengerPlane, SportsPlane, CargoPlane).
    - Создай авиакомпанию (абстрактный класс Company).
    - Создай абстрактные классы грузовой, пассажирской, спорт - авиакомпаний. Назови их соответсвенно.
      Каждая компания может хранить только самолеты соотв. типа (грузовая компания - грузовые самолеты и т.п.)
      Поэтому для каждой компании:
      - В каждый класс добавь приватное поле ArrayList plane, тип этого листа должен соотв. типу хранимых
      самолетов (тип задается в скобках ArrayList<PassengerPlane> - в таком виде).
      - Инициализируй поле plane в конструкторе (для создания конструктора можно воспользоваться
      быстрым способом: курсор должен находиться внутри класса, в который ты добавляешь конструктор,
      нажимаешь ALT+INSERT -> Constructor.
      - Для добавления самолетов в компанию каждая компания должна иметь метод addPlane(Plane plane):
        - Т.к. метод повторяется в каждом классе, лучше вынести метод addPlane в базовый класс Company
        и убрать его объявления в других классах.
        - Подумай как будут наследоваться классы друг от друга и примени наследование.
        - Метод должен добавлять переданные в него самолеты в переменную planes.

 - Создай в папке "classes" папку "concrete", здесь будут храниться реализации базовых абстрактных классов.
    - Создай конкретные реализации PassengerPlane, SportsPlane, CargoPlane.
    - Создай конкретные реализации всех компаний, унаследовав соотвествующие классы,
    назови эти классы как захочешь.

 - В классе Solution:
    - Создай метод main.
    - Создай по 1 объекту компании.
    - Создай несколько самолетов разных типов.
    - Распредели самолеты по компаниям (добавь их в компании по типу).

 */
public class Solution {

}
